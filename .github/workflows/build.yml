name: Build
 
on:
  workflow_dispatch:
  push:
 
jobs:
  build-binary:
    runs-on: ubuntu-latest
    env:
      TAGS: "with_gvisor,with_quic,with_wireguard,with_utls,with_clash_api"
 
    strategy:
      matrix:
        platform:
          - { GOOS: android, GOARCH: arm, CC: armv7a-linux-androideabi34-clang, CGO_ENABLED: 1 }
          - { GOOS: android, GOARCH: arm64, CC: aarch64-linux-android34-clang, CGO_ENABLED: 0 }
          - { GOOS: linux, GOARCH: arm, CGO_ENABLED: 0 }
          - { GOOS: linux, GOARCH: arm64, CGO_ENABLED: 0 }
 
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
 
      - name: Get latest go version
        id: go_version
        run: |
          echo "go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g')" >> $GITHUB_OUTPUT
 
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
 
      - name: Setup ndk
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
          add-to-path: false
          local-cache: false
 
      - name: Get sing-box version
        id: sing-box
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          echo "version=$version" >> $GITHUB_OUTPUT
 
      - name: Build binary
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          if [ "${{ matrix.platform.GOOS }}" == "android" ]; then
            CC=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/${{ matrix.platform.CC }}
          else
            CC=""
          fi
          CGO_ENABLED=${{ matrix.platform.CGO_ENABLED }} \
          GOOS=${{ matrix.platform.GOOS }} \
          GOARCH=${{ matrix.platform.GOARCH }} \
          CC=${CC} \
          make
 
      - name: Upload binary
        uses: actions/upload-artifact@v4.3.1
        with:
          name: sing-box-${{ steps.sing-box.outputs.version }}-${{ matrix.platform.GOOS }}-${{ matrix.platform.GOARCH }}
          path: sing-box
 
  build-sfa:
    runs-on: ubuntu-latest
    env:
      TAGS: "with_gvisor,with_quic,with_wireguard,with_utls,with_clash_api"
 
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
 
      - name: Get latest go version
        id: go_version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
 
      - name: Get latest build tools version
        id: sdk
        run: echo version=$(ls $ANDROID_HOME/build-tools | tail -n 1) >> $GITHUB_OUTPUT
 
      - name: Setup go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: ${{ steps.go_version.outputs.go_version }}
 
      - name: Checkout sfa repository
        uses: actions/checkout@v4.1.1
        with:
          repository: SagerNet/sing-box-for-android
          path: SFA
          submodules: recursive
 
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'oracle'
          java-version: 21
 
      - name: Setup ndk
        uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r27c
          add-to-path: false
          local-cache: false
 
      - name: Build sfa
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box
          git fetch sekai
          mkdir -p SFA/app/libs/
          make lib_install
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          CC=${ANDROID_NDK_HOME}/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android34-clang
          CGO_ENABLED=0 gomobile bind -v -a -trimpath -androidapi 21 -javapkg=io.nekohasekai -libname=box -tags ${TAGS} -ldflags "-X github.com/sagernet/sing-box/constant.Version=${version} -s -w -buildid=" ./experimental/libbox
          cp ./libbox.aar SFA/app/libs/
          cd SFA
          echo "" >> gradle.properties
          echo "org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8 -XX:+UseParallelGC" >> gradle.properties
          echo "org.gradle.caching=true" >> gradle.properties
          echo "org.gradle.parallel=true" >> gradle.properties
          echo "VERSION_NAME=${version}" > local.properties
          echo "VERSION_CODE=$(date +%Y%m%d%H)" >> local.properties
          sed -i '/signingConfigs\.release/d' app/build.gradle
          chmod +x ./gradlew
          ./gradlew assembleRelease
      
      - name: Sign sfa
        uses: PuerNya/sign-android-release@v2.0.4
        env:
          BUILD_TOOLS_VERSION: ${{steps.sdk.outputs.version}}
        with:
          releaseDirectory: SFA/app/build/outputs/apk/other/release
          signingKeyBase64: ${{ secrets.SIGN_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
 
      - name: Upload arm
        uses: actions/upload-artifact@v4.1.0
        with:
          name: sfa-foss-arm
          path: SFA/app/build/outputs/apk/other/release/*-armeabi-v7a-signed.apk
 
      - name: Upload arm64
        uses: actions/upload-artifact@v4.1.0
        with:
          name: sfa-foss-arm64
          path: SFA/app/build/outputs/apk/other/release/*-arm64-v8a-signed.apk